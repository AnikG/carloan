import Head from "next/head";
import { Inter } from "@next/font/google";
import styles from "@/styles/Home.module.css";
import "@fontsource/public-sans";
import { CssVarsProvider } from "@mui/joy/styles";
import Sheet from "@mui/joy/Sheet";
import FormControl from "@mui/joy/FormControl";
import FormLabel from "@mui/joy/FormLabel";
import Input from "@mui/joy/Input";
import Slider from "@mui/joy/Slider";
import Table from "@mui/joy/Table";
import { useState, useEffect } from "react";

const marks = [
  {
    value: 580,
    label: "Fair",
    rate: 7.1,
  },
  {
    value: 670,
    label: "Good",
    rate: 6.5,
  },
  {
    value: 740,
    label: "Very Good",
    rate: 6.0,
  },
  {
    value: 800,
    label: "Excellent",
    rate: 5.5,
  },
];

function interestRate(creditScore) {
  return (1000.0 - creditScore) / 100; // TODO: replace this nonsense with a lookup in the marks[]
}

function valueText(value) {
  return `${value}`;
}

function calculatePayment(loanAmount, interestRatePercent, durationMonths) {
  const monthlyInterestRate = interestRatePercent / 100 / 12;
  const paymentPerUnit =
    monthlyInterestRate / (1 - (1 + monthlyInterestRate) ** -durationMonths);
  const payment = loanAmount * paymentPerUnit;
  const paymentString = new Intl.NumberFormat("en-US", {
    style: "currency",
    currency: "USD",
  }).format(payment);
  return paymentString;
}

export default function Home() {
  const initialLoanAmount = 15000;
  const defaultCreditScore = 600;
  const [loanAmount, setLoanAmount] = useState(initialLoanAmount);
  const [creditScore, setCreditScore] = useState(defaultCreditScore);
  const [paymentAmount, setPaymentAmount] = useState(0);

  useEffect(() => {
    let payment = parseFloat(loanAmount) + parseFloat(creditScore);
    setPaymentAmount(payment);
    console.log(loanAmount, creditScore, payment);
    return;
  }, [loanAmount, creditScore]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <CssVarsProvider>
          <Sheet
            sx={{
              width: 500,
              height: 500,
              mx: "auto", // margin left & right
              my: 4, // margin top & bottom
              py: 3, // padding top & bottom
              px: 2, // padding left & right
              display: "flex",
              flexDirection: "column",
              gap: 2,
              borderRadius: "sm",
              boxShadow: "md",
            }}
          >
            <FormControl>
              <FormLabel>Loan amount</FormLabel>
              <Input
                // html input attribute
                name="amount"
                type="number"
                placeholder={initialLoanAmount.toString()}
                onChange={(event) => setLoanAmount(event.target.value)}
              />
            </FormControl>
            <Slider
              aria-label="Always visible"
              min={500}
              max={800}
              step={10}
              defaultValue={defaultCreditScore}
              getAriaValueText={valueText}
              marks={marks}
              valueLabelDisplay="auto"
              //sx={{ mx: 10 }}
              onChange={(event) => setCreditScore(event.target.value)}
            />
            <Table aria-label="basic table">
              <thead>
                <tr>
                  <th style={{ width: "40%" }}>Months</th>
                  <th>Payment</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>36</td>
                  <td>
                    {calculatePayment(
                      loanAmount,
                      interestRate(creditScore),
                      36
                    )}
                  </td>
                </tr>
                <tr>
                  <td>48</td>
                  <td>
                    {" "}
                    {calculatePayment(
                      loanAmount,
                      interestRate(creditScore),
                      48
                    )}
                  </td>
                </tr>
                <tr>
                  <td>60</td>
                  <td>
                    {" "}
                    {calculatePayment(
                      loanAmount,
                      interestRate(creditScore),
                      60
                    )}
                  </td>
                </tr>
                <tr>
                  <td>72</td>
                  <td>
                    {" "}
                    {calculatePayment(
                      loanAmount,
                      interestRate(creditScore),
                      72
                    )}
                  </td>
                </tr>
                <tr>
                  <td>84</td>
                  <td>
                    {" "}
                    {calculatePayment(
                      loanAmount,
                      interestRate(creditScore),
                      84
                    )}
                  </td>
                </tr>
              </tbody>
            </Table>
          </Sheet>
        </CssVarsProvider>
      </main>
    </>
  );
}
